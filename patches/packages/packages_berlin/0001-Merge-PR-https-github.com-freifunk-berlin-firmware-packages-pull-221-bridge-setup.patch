From: Sven Roederer <devel-sven@geroedel.de>
Date: Sat, 12 Jun 2021 00:19:37 +0200
Subject: Merge PR https://github.com/freifunk-berlin/firmware-packages/pull/221 (bridge-setup)

Squashed version of
    uplink-notunnel: adapt bridge setup to new UCI-definition
    wizard: create br-dhcp in new spilt uci-config
    network-defaults: adapt setup of WAN-bridge to changed uci-definitions

diff --git a/defaults/freifunk-berlin-network-defaults/root/etc/uci-defaults/freifunk-berlin-network-defaults b/defaults/freifunk-berlin-network-defaults/root/etc/uci-defaults/freifunk-berlin-network-defaults
index f670dca4fe16e08da264ff686a7471841c419b43..590028ef9093b1dd9782852dbcf1405339b20a99 100644
--- a/defaults/freifunk-berlin-network-defaults/root/etc/uci-defaults/freifunk-berlin-network-defaults
+++ b/defaults/freifunk-berlin-network-defaults/root/etc/uci-defaults/freifunk-berlin-network-defaults
@@ -1,8 +1,35 @@
 #!/bin/sh
 
+. /lib/functions.sh
 . /lib/functions/guard.sh
 guard "network"
 
+# find_first_section_for_name(sectionname uci-config searchname)
+find_first_section_for_name() {
+  local section=$1
+  local uciconfig=$2
+  local search=$3
+
+  if [ $(uci -q get ${uciconfig}.${section}.name) = ${search} ]; then
+    echo ${section}
+  fi
+}
+
+wan_2_bridge() {
+  local WANDEVICE=$1
+  local WANDEVICESECTION
+
+  # find current WAN-device
+  config_load network
+  WANDEVICESECTION=$(config_foreach find_first_section_for_name device network ${WANDEVICE})
+  # define WAN-device as bridge with name "br-wan"
+  uci set network.$WANDEVICESECTION.type='bridge'
+  uci set network.$WANDEVICESECTION.name='br-wan'
+  # set WAN & WAN6 interfaces to new WAN-device
+  uci set network.wan.device="br-wan"
+  uci set network.wan6.device="br-wan"
+}
+
 # change default ip to avoid collision with user's local network
 uci set network.lan.ipaddr=192.168.42.1
 
@@ -11,8 +38,11 @@ uci set network.lan.ipaddr=192.168.42.1
 uci set network.wan.peerdns=0
 uci set network.wan6.peerdns=0
 
-# setup wan as bridge
-uci set network.wan.type=bridge
+# setup wan as bridge if it exists (e.g. 1-port devices)
+if [ -n $(uci -q get network.wan) ]; then
+#  echo >&2 "wan interface found"
+  wan_2_bridge $(uci get network.wan.device)
+fi
 
 # add tunl0 interface - tunl0 is the ipip tunnel interface for the olsr
 # SmartGateway plugin
diff --git a/uplinks/freifunk-berlin-uplink-notunnel/root/etc/uci-defaults/freifunk-berlin-z95_notunnel b/uplinks/freifunk-berlin-uplink-notunnel/root/etc/uci-defaults/freifunk-berlin-z95_notunnel
index 0e6a3ef2dbd7d1905f7f7f45bd682ae4020f879e..58c525d5f72618494f7900025c90799f24bbb21a 100644
--- a/uplinks/freifunk-berlin-uplink-notunnel/root/etc/uci-defaults/freifunk-berlin-z95_notunnel
+++ b/uplinks/freifunk-berlin-uplink-notunnel/root/etc/uci-defaults/freifunk-berlin-z95_notunnel
@@ -42,9 +42,26 @@ uci set network.ffuplink_dev.macaddr=$macaddr
 uci commit network.ffuplink_dev
 
 # add ffuplink_dev to br-wan if not there
-ifnames=$(uci get network.wan.ifname)
-list_contains ifnames ffuplink_wan || uci set network.wan.ifname="${ifnames} ffuplink_wan"
-uci commit network.wan
+## look for our device section
+add_kernelif_to_bridge() {
+  local config="$1"
+  local device="$2"
+  local interface="$3"
+
+  echo "--- config: $config ---"
+  uci show network.$config
+  local thisdevice=$(uci get network.$config.name)
+  echo "  $thisdevice"
+  if [ "$device" = "$thisdevice" ]; then
+    echo "  adding interface $interface"
+    ifnames=$(uci get network.$config.ports)
+    list_contains ifnames "$interface" || uci add_list network.$config.ports=$interface
+  fi
+}
+
+config_load network
+config_foreach add_kernelif_to_bridge device br-wan ffuplink_wan
+uci commit network.br-wan
 
 uci set network.ffuplink.proto=dhcp
 uci set network.ffuplink.hostname=freifunk-$(echo $macaddr|tr -d :)-uplink
diff --git a/utils/luci-app-ffwizard-berlin/luasrc/model/cbi/freifunk/assistent/wireless.lua b/utils/luci-app-ffwizard-berlin/luasrc/model/cbi/freifunk/assistent/wireless.lua
index 1f5bec52554642f11127807258bfe2239e9bf1e1..9ad36ce9a0b5e9b187892687d2b25bbe1827b636 100644
--- a/utils/luci-app-ffwizard-berlin/luasrc/model/cbi/freifunk/assistent/wireless.lua
+++ b/utils/luci-app-ffwizard-berlin/luasrc/model/cbi/freifunk/assistent/wireless.lua
@@ -240,16 +240,24 @@ function main.write(self, section, value)
   --only do this if user entered cidr
   if (dhcpmeshnet:prefix() < 32) then
     --NETWORK CONFIG bridge for wifi APs
+    -- rename device br-lan to br-dhcp
+    uci:foreach("network","device",
+      function(section)
+        if section.name == "br-lan" then
+          uci:set("network", section['.name'], "name", "br-dhcp")
+        end
+      end
+    )
+
     local prenetconfig =  {}
     prenetconfig.ipaddr=dhcpmeshnet:minhost():string()
     prenetconfig.netmask=dhcpmeshnet:mask():string()
     prenetconfig.ip6assign="64"
-    prenetconfig.type="bridge"
     prenetconfig.proto="static"
-    -- use ifname from dhcp bridge on a consecutive run of assistent
-    prenetconfig.ifname=uci:get("network", "lan", "ifname") or uci:get("network", "dhcp", "ifname")
+    prenetconfig.ifname="br-dhcp"
 
     -- if macaddr is set for lan interface also set it for dhcp interface (needed for wdr4900)
+    -- TODO: rewite to new network --> is it needed? the MAC should belong to the still correct device
     local macaddr=uci:get("network", "lan", "macaddr") or uci:get("network", "dhcp", "macaddr")
     if (macaddr) then
       prenetconfig.macaddr = macaddr
