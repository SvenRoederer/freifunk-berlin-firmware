name: Build Firmware

on:
  push:
    branches: [ master, next, nightly/* ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-18.04

    strategy:
      matrix:
        target: 
          - ath79-generic
          - ath79-mikrotik
          - ath79-tiny
          - mvebu-cortexa9
          - ramips-mt7620
          - x86-generic
      fail-fast: false

    env:
      IS_BUILDBOT: yes
      BUILD_LOG_DIR: logs

    steps:
    - uses: actions/checkout@v2
    - name: install dependencies
      run: sudo apt-get --quiet --assume-yes --no-install-recommends --no-show-upgraded install git build-essential libncurses5-dev zlib1g-dev gawk time unzip libxml-perl flex wget gawk gettext quilt python libssl-dev
    - name: setup build-environment
      run: |
        df -h
        mkdir logs
        echo "MAKE_OPTS= -j$(nproc) TARGET=${{matrix.target}} IS_BUILDBOT=${IS_BUILDBOT} " >>$GITHUB_ENV
        echo "next_buildstep=config" >>$GITHUB_ENV
        # this sets env BRANCHNAME_normalized by removing the 1st two elements from $GITHUB_REF
        # These elements are usually "refs/heads/"
        # in addition replace all / by _
        var=$(echo ${GITHUB_REF} | sed -e 's#^[a-zA-Z]*/[a-zA-Z]*/##; s#/#_#g;')
        echo helper-var: ${var}
        echo "BRANCHNAME_normalized=${var}" >> $GITHUB_ENV
    - name: OpenWrt ${{ env.next_buildstep }}
      run: |
        echo "running: make -f Makefile.autobuild ${MAKE_OPTS} ${next_buildstep}"
        make -f Makefile.autobuild ${MAKE_OPTS} ${next_buildstep}
        nextstep=$(make -f Makefile.autobuild next-buildstep-for-config)
        echo "next_buildstep=${nextstep}" >>$GITHUB_ENV
        df -h
    - name: OpenWrt-config to artifacts
      run: cp openwrt/.config logs/openwrt.config
    - name: openwrt ${{ env.next_buildstep }}
      if: ${{ env.next_buildstep != null }}
      run: |
        echo "running: make -f Makefile.autobuild ${MAKE_OPTS} ${next_buildstep}"
        make -f Makefile.autobuild ${MAKE_OPTS} ${next_buildstep}
        nextstep=$(make -f Makefile.autobuild next-buildstep-for-${next_buildstep})
        echo "next_buildstep=${nextstep}" >>$GITHUB_ENV
    - name: openwrt ${{ env.next_buildstep }}
      if: ${{ env.next_buildstep != null }}
      run: |
        echo "running: make -f Makefile.autobuild ${MAKE_OPTS} ${next_buildstep}"
        make -f Makefile.autobuild ${MAKE_OPTS} ${next_buildstep}
        nextstep=$(make -f Makefile.autobuild next-buildstep-for-${next_buildstep})
        echo "next_buildstep=${nextstep}" >>$GITHUB_ENV
    - name: openwrt ${{ env.next_buildstep }}
      if: ${{ env.next_buildstep != null }}
      run: |
        echo "running: make -f Makefile.autobuild ${MAKE_OPTS} ${next_buildstep}"
        make -f Makefile.autobuild ${MAKE_OPTS} ${next_buildstep}
        nextstep=$(make -f Makefile.autobuild next-buildstep-for-${next_buildstep})
        echo "next_buildstep=${nextstep}" >>$GITHUB_ENV
    - name: openwrt ${{ env.next_buildstep }}
      if: ${{ env.next_buildstep != null }}
      run: |
        echo "running: make -f Makefile.autobuild ${MAKE_OPTS} ${next_buildstep}"
        make -f Makefile.autobuild ${MAKE_OPTS} ${next_buildstep}
        nextstep=$(make -f Makefile.autobuild next-buildstep-for-${next_buildstep})
        echo "next_buildstep=${nextstep}" >>$GITHUB_ENV
    - name: openwrt ${{ env.next_buildstep }}
      if: ${{ env.next_buildstep != null }}
      run: |
        echo "running: make -f Makefile.autobuild ${MAKE_OPTS} ${next_buildstep}"
        make -f Makefile.autobuild ${MAKE_OPTS} ${next_buildstep}
        nextstep=$(make -f Makefile.autobuild next-buildstep-for-${next_buildstep})
        echo "next_buildstep=${nextstep}" >>$GITHUB_ENV
    - name: openwrt ${{ env.next_buildstep }}
      if: ${{ env.next_buildstep != null }}
      run: |
        echo "running: make -f Makefile.autobuild ${MAKE_OPTS} ${next_buildstep}"
        make -f Makefile.autobuild ${MAKE_OPTS} ${next_buildstep}
        nextstep=$(make -f Makefile.autobuild next-buildstep-for-${next_buildstep})
        echo "next_buildstep=${nextstep}" >>$GITHUB_ENV
    - name: openwrt ${{ env.next_buildstep }}
      if: ${{ env.next_buildstep != null }}
      run: |
        echo "running: make -f Makefile.autobuild ${MAKE_OPTS} ${next_buildstep}"
        make -f Makefile.autobuild ${MAKE_OPTS} ${next_buildstep}
        nextstep=$(make -f Makefile.autobuild next-buildstep-for-${next_buildstep})
        echo "next_buildstep=${nextstep}" >>$GITHUB_ENV
    - name: openwrt ${{ env.next_buildstep }}
      if: ${{ env.next_buildstep != null }}
      run: |
        echo "running: make -f Makefile.autobuild ${MAKE_OPTS} ${next_buildstep}"
        make -f Makefile.autobuild ${MAKE_OPTS} ${next_buildstep}
        nextstep=$(make -f Makefile.autobuild next-buildstep-for-${next_buildstep})
        echo "next_buildstep=${nextstep}" >>$GITHUB_ENV
    - name: openwrt ${{ env.next_buildstep }}
      if: ${{ env.next_buildstep != null }}
      run: |
        echo "running: make -f Makefile.autobuild ${MAKE_OPTS} ${next_buildstep}"
        make -f Makefile.autobuild ${MAKE_OPTS} ${next_buildstep}
        nextstep=$(make -f Makefile.autobuild next-buildstep-for-${next_buildstep})
        echo "next_buildstep=${nextstep}" >>$GITHUB_ENV
    - name: openwrt ${{ env.next_buildstep }}
      if: ${{ env.next_buildstep != null }}
      run: |
        echo "running: make -f Makefile.autobuild ${MAKE_OPTS} ${next_buildstep}"
        make -f Makefile.autobuild ${MAKE_OPTS} ${next_buildstep}
        nextstep=$(make -f Makefile.autobuild next-buildstep-for-${next_buildstep})
        echo "next_buildstep=${nextstep}" >>$GITHUB_ENV
    - name: Archive build logs
      if: ${{ !cancelled() }}
      uses: actions/upload-artifact@v1
      with:
        name: ${{matrix.target}}_logs
        path: logs
    - name: prepare upload of imagebuilder and sdk
      run: |
       mkdir tmp_build-tools
       find openwrt/bin -name *imagebuilder*.tar.xz -exec mv '{}' tmp_build-tools/ \;
       find openwrt/bin -name *sdk*.tar.xz -exec mv '{}' tmp_build-tools/ \;
    - name: Archive imagebuilder and sdk
      if: ${{ !cancelled() }}
      continue-on-error: true
      uses: actions/upload-artifact@v1
      with:
        name: ${{ matrix.target }}_build-tools
        path: tmp_build-tools
    - name: Archive binaries
      if: ${{ !cancelled() }}
      continue-on-error: true
      uses: actions/upload-artifact@v1
      with:
        name: ${{ matrix.target }}_bins
        path: openwrt/bin/
    - run: df -h
      if: ${{ !cancelled() }}
    - name: upload
      if: github.event_name == 'push'
      env:
        SSH_KEY: ${{ secrets.OPENWRT_BUILDUPLOAD_PRIVATE }}
      run: |
        eval "$(ssh-agent -s)"
        ssh-add - <<< "${SSH_KEY}"
        scp -o StrictHostKeyChecking=no -P ${{ secrets.OPENWRT_BUILDUPLOAD_PORT }} tmp_build-tools/* openwrt-upload@dazzle.geroedel.de:../upload/
        
